# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

# n = int(input("Введите количество элементов первого множества: "))
# m = int(input("Введите количество элементов второго множества: "))

# set1 = set(map(int, input("Введите элементы первого множества через пробел: ").split()))
# set2 = set(map(int, input("Введите элементы второго множества через пробел: ").split()))

# intersection = sorted(list(set1.intersection(set2)))

# print("Элементы, встречающиеся в обоих множествах:", intersection)
# print("Уникальные элементы первого множества:", set1.difference(set2))
# print(f" Уникальные элементы второго множества - {set2.difference(set1)}")


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

# N = int(input("Введите количество кустов: "))
# harvest = list(map(int, input("Ведите количество ягод через пробел: ").split()))
# max_harvest = 0
# for i in range(N):
#     total_harvest = harvest[i] + harvest[i-1] + harvest[(i+1) % N]
#     if total_harvest > max_harvest:
#         max_harvest = total_harvest
# print(max_harvest)